*** -u flag
Выполнив команду git push -u origin master вы устанавливаете связь между той веткой, 
в которой вы находитесь и веткой master на удалённом сервере. 
Команду требуется выполнить единожды, чтобы потом можно было отправлять/принимать изменения
лишь выполняя git push из ветки без указания всяких алиасов для сервера и удалённых веток. 
Это сделано для удобства.
***

git clone https://github.com/kitiket1999/имя_репозитория.git

git init
cd имя каталога //*перейти в каталог с именем, соответствующим имени подключаемого репозитория
git remote add origin https://github.com/kitiket1999/имя_репозитория.git
git remote remove origin //отвязывает адрес репозитория от текущей дериктории (cd) 

git add -A или название файла //(промежуточный этап, перед коммитом и пушем, добавляющий все(-А) файлы из рабочей области в staging area)
git commit -m 'комментарий'
git push origin название ветки

///////ветки///////
git fetch //получить все ветки с gitHub (без содержимого веток)
git checkout имя ветки, на которую хотим переключиться
git checkout -b имя //создаст новую ветку !локально и сразу на нее переключается
    *если запушить от имени этой новой локальной ветки - она автоматически создастся на репозитории.
git branch -m имя ветки //меняет имя текущей !локальной ветки

git pull origin имя ветки из которой загружаем (например: разницу версий веток)
    *почему между pull и push не требовался commit?
git cherry-pick номер коммита (позволяет забрать любой отдельный коммит из любой ветки)

git push origin --delete название ветки //удаляет remote ветку
git branch -D название ветки //удаляет локальную ветку

//Merge - слияние, перенос из одной ветки в другую.
//Deploy - размещение на платформе. В нашем случае - github.
//Deploy to gh-pages https://www.youtube.com/watch?v=0lvKcqP3aP0&ab_channel=RollingScopesSchool
